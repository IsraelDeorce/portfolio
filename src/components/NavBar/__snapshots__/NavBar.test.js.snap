// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NavBar/> Snapshot renders without crashing using mount 1`] = `
.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 > *:not(:last-child) {
  margin-right: 2em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > *:not(:last-child) {
  margin-right: 0.5em;
}

.c0 {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 700;
  padding: 0 1.5em;
  min-height: 60px;
}

.c0 > *:not(:last-child) {
  margin-right: 0.75em;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c3 > *:not(:last-child) {
  margin-right: 0.75em;
}

@media (min-width:992px) {
  .c1 {
    display: none;
  }
}

@media (max-width:992px) {
  .c3 {
    display: none;
  }
}

<HashRouter>
  <Router
    location={
      Object {
        "hash": "",
        "key": "default",
        "pathname": "/",
        "search": "",
        "state": null,
      }
    }
    navigationType="POP"
    navigator={
      Object {
        "action": "POP",
        "back": [Function],
        "block": [Function],
        "createHref": [Function],
        "forward": [Function],
        "go": [Function],
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "default",
          "pathname": "/",
          "search": "",
          "state": null,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <NavBar>
      <styled.nav>
        <nav
          className="c0"
        >
          <styled.span
            onClick={[Function]}
          >
            <span
              className="c1"
              onClick={[Function]}
            >
              <MdMenu
                size="32"
              >
                <IconBase
                  attr={
                    Object {
                      "viewBox": "0 0 24 24",
                    }
                  }
                  size="32"
                >
                  <svg
                    fill="currentColor"
                    height="32"
                    stroke="currentColor"
                    strokeWidth="0"
                    style={
                      Object {
                        "color": undefined,
                      }
                    }
                    viewBox="0 0 24 24"
                    width="32"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M0 0h24v24H0z"
                      fill="none"
                      key="0"
                    />
                    <path
                      d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                      key="1"
                    />
                  </svg>
                </IconBase>
              </MdMenu>
            </span>
          </styled.span>
          <TitledLogo>
            <HashLink
              to="#home"
            >
              <Link
                onClick={[Function]}
                to="#home"
              >
                <a
                  href="#/#home"
                  onClick={[Function]}
                >
                  <styled.div>
                    <div
                      className="c2"
                    >
                      <GiDirewolf
                        size="32"
                      >
                        <IconBase
                          attr={
                            Object {
                              "viewBox": "0 0 512 512",
                            }
                          }
                          size="32"
                        >
                          <svg
                            fill="currentColor"
                            height="32"
                            stroke="currentColor"
                            strokeWidth="0"
                            style={
                              Object {
                                "color": undefined,
                              }
                            }
                            viewBox="0 0 512 512"
                            width="32"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M145.14 22.185c9.508 36.595 15.32 71.885 14.22 108.31 21.73 18.495 44.074 28.207 68.035 38.93 11.813 5.288 23.99 10.82 36.37 17.69-24.702-70.606-62.676-117.77-118.626-164.93zM27.122 25.887C24.958 45.21 27.53 71.24 34.12 97.38c6.96 18.72 16.942 37.974 27.595 54.67 15.003 23.516 32.422 42.276 40.48 46.868l-9.27 16.244c-14.91-8.496-31.08-28.122-46.978-53.037-9.383-14.708-18.273-31.144-25.328-47.943v196.584l43.17 1.76c-2.8-23.054-4.248-45.878-2.73-66.516l18.614 1.382c-2.313 31.474 3.16 71.293 9.656 108.65 110.615 90.673 195.362 124.516 260.695 131.175l-95.107-66.8 40.053-15.876L152.44 332.58l38.505-1.738c-28.377-14.028-48.9-32.894-63.144-55.63l1.464-22.964c35.81 41.623 89.82 73.71 151.373 98.096l-43.164 6.068 112.765 52.193-22.39 25.518 119.7 42.32c16.61-5.68 31.058-12.678 43.66-19.464-97.364-69.615-123.58-131.642-168.034-193.962l-.008-.01c-34.93-45.653-68.47-60.9-103.4-76.534-33.725-15.094-68.975-30.612-101.788-72.558L27.123 25.887zm156.344 175.59l89.894 46.75-24.032 17.57c18.66 30.458 55.134 55.834 91.12 72.86-50.826-7.884-103.33-32.248-148.212-69.427l29.815-20.224-38.583-47.53z"
                              key="0"
                            />
                          </svg>
                        </IconBase>
                      </GiDirewolf>
                      <strong>
                        Israel Deorce
                      </strong>
                    </div>
                  </styled.div>
                </a>
              </Link>
            </HashLink>
          </TitledLogo>
          <styled.div>
            <div
              className="c3"
            >
              <PortfolioLinks>
                <styled.div
                  orientation="horizontal"
                >
                  <div
                    className="c4"
                    orientation="horizontal"
                  >
                    <HashLink
                      to="#about"
                    >
                      <Link
                        onClick={[Function]}
                        to="#about"
                      >
                        <a
                          href="#/#about"
                          onClick={[Function]}
                        >
                          button.about
                        </a>
                      </Link>
                    </HashLink>
                    <HashLink
                      to="#skills"
                    >
                      <Link
                        onClick={[Function]}
                        to="#skills"
                      >
                        <a
                          href="#/#skills"
                          onClick={[Function]}
                        >
                          button.skills
                        </a>
                      </Link>
                    </HashLink>
                    <HashLink
                      to="#experience"
                    >
                      <Link
                        onClick={[Function]}
                        to="#experience"
                      >
                        <a
                          href="#/#experience"
                          onClick={[Function]}
                        >
                          button.experience
                        </a>
                      </Link>
                    </HashLink>
                    <HashLink
                      to="#contact"
                    >
                      <Link
                        onClick={[Function]}
                        to="#contact"
                      >
                        <a
                          href="#/#contact"
                          onClick={[Function]}
                        >
                          button.contact
                        </a>
                      </Link>
                    </HashLink>
                  </div>
                </styled.div>
              </PortfolioLinks>
              <ThemeToggle>
                <Toggle
                  className="toggle"
                  icons={
                    Object {
                      "checked": <FaSun />,
                      "unchecked": <FaMoon />,
                    }
                  }
                  onChange={[MockFunction]}
                >
                  <div
                    className="react-toggle toggle"
                    onClick={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                  >
                    <div
                      className="react-toggle-track"
                    >
                      <div
                        className="react-toggle-track-check"
                      >
                        <FaSun>
                          <IconBase
                            attr={
                              Object {
                                "viewBox": "0 0 512 512",
                              }
                            }
                          >
                            <svg
                              fill="currentColor"
                              height="1em"
                              stroke="currentColor"
                              strokeWidth="0"
                              style={
                                Object {
                                  "color": undefined,
                                }
                              }
                              viewBox="0 0 512 512"
                              width="1em"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z"
                                key="0"
                              />
                            </svg>
                          </IconBase>
                        </FaSun>
                      </div>
                      <div
                        className="react-toggle-track-x"
                      >
                        <FaMoon>
                          <IconBase
                            attr={
                              Object {
                                "viewBox": "0 0 512 512",
                              }
                            }
                          >
                            <svg
                              fill="currentColor"
                              height="1em"
                              stroke="currentColor"
                              strokeWidth="0"
                              style={
                                Object {
                                  "color": undefined,
                                }
                              }
                              viewBox="0 0 512 512"
                              width="1em"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z"
                                key="0"
                              />
                            </svg>
                          </IconBase>
                        </FaMoon>
                      </div>
                    </div>
                    <div
                      className="react-toggle-thumb"
                    />
                    <input
                      className="react-toggle-screenreader-only"
                      onBlur={[Function]}
                      onChange={[MockFunction]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                  </div>
                </Toggle>
              </ThemeToggle>
              <LanguageSelector>
                <styled.div
                  onClick={[Function]}
                >
                  <div
                    className="c5"
                    onClick={[Function]}
                  >
                    <styled.div>
                      <div
                        className="c6"
                      >
                        en
                        <MdKeyboardArrowDown>
                          <IconBase
                            attr={
                              Object {
                                "viewBox": "0 0 24 24",
                              }
                            }
                          >
                            <svg
                              fill="currentColor"
                              height="1em"
                              stroke="currentColor"
                              strokeWidth="0"
                              style={
                                Object {
                                  "color": undefined,
                                }
                              }
                              viewBox="0 0 24 24"
                              width="1em"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M0 0h24v24H0V0z"
                                fill="none"
                                key="0"
                              />
                              <path
                                d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                key="1"
                              />
                            </svg>
                          </IconBase>
                        </MdKeyboardArrowDown>
                      </div>
                    </styled.div>
                    <CA
                      className="flag"
                      title="Canada"
                    >
                      <svg
                        className="flag"
                        viewBox="0 0 513 342"
                      >
                        <title>
                          Canada
                        </title>
                        <path
                          d="M0 0h513v342H0z"
                          fill="#FFF"
                        />
                        <path
                          d="M0 0h142v342H0zm371 0h142v342H371zm-64.5 206l50.4-25.2-25.2-12.6V143l-50.4 25.2 25.2-50.4h-25.2L256.1 80l-25.2 37.8h-25.2l25.2 50.4-50.4-25.2v25.2l-25.2 12.6 50.4 25.2-12.6 25.2h50.4V269h25.2v-37.8h50.4z"
                          fill="red"
                        />
                      </svg>
                    </CA>
                  </div>
                </styled.div>
              </LanguageSelector>
            </div>
          </styled.div>
        </nav>
      </styled.nav>
    </NavBar>
  </Router>
</HashRouter>
`;

exports[`<NavBar/> Snapshot renders without crashing using render 1`] = `
.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 > *:not(:last-child) {
  margin-right: 2em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > *:not(:last-child) {
  margin-right: 0.5em;
}

.c0 {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 700;
  padding: 0 1.5em;
  min-height: 60px;
}

.c0 > *:not(:last-child) {
  margin-right: 0.75em;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c3 > *:not(:last-child) {
  margin-right: 0.75em;
}

@media (min-width:992px) {
  .c1 {
    display: none;
  }
}

@media (max-width:992px) {
  .c3 {
    display: none;
  }
}

<nav
  class="c0"
>
  <span
    class="c1"
  >
    <svg
      fill="currentColor"
      height="32"
      stroke="currentColor"
      stroke-width="0"
      viewBox="0 0 24 24"
      width="32"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M0 0h24v24H0z"
        fill="none"
      />
      <path
        d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
      />
    </svg>
  </span>
  <a
    href="#/#home"
  >
    <div
      class="c2"
    >
      <svg
        fill="currentColor"
        height="32"
        stroke="currentColor"
        stroke-width="0"
        viewBox="0 0 512 512"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M145.14 22.185c9.508 36.595 15.32 71.885 14.22 108.31 21.73 18.495 44.074 28.207 68.035 38.93 11.813 5.288 23.99 10.82 36.37 17.69-24.702-70.606-62.676-117.77-118.626-164.93zM27.122 25.887C24.958 45.21 27.53 71.24 34.12 97.38c6.96 18.72 16.942 37.974 27.595 54.67 15.003 23.516 32.422 42.276 40.48 46.868l-9.27 16.244c-14.91-8.496-31.08-28.122-46.978-53.037-9.383-14.708-18.273-31.144-25.328-47.943v196.584l43.17 1.76c-2.8-23.054-4.248-45.878-2.73-66.516l18.614 1.382c-2.313 31.474 3.16 71.293 9.656 108.65 110.615 90.673 195.362 124.516 260.695 131.175l-95.107-66.8 40.053-15.876L152.44 332.58l38.505-1.738c-28.377-14.028-48.9-32.894-63.144-55.63l1.464-22.964c35.81 41.623 89.82 73.71 151.373 98.096l-43.164 6.068 112.765 52.193-22.39 25.518 119.7 42.32c16.61-5.68 31.058-12.678 43.66-19.464-97.364-69.615-123.58-131.642-168.034-193.962l-.008-.01c-34.93-45.653-68.47-60.9-103.4-76.534-33.725-15.094-68.975-30.612-101.788-72.558L27.123 25.887zm156.344 175.59l89.894 46.75-24.032 17.57c18.66 30.458 55.134 55.834 91.12 72.86-50.826-7.884-103.33-32.248-148.212-69.427l29.815-20.224-38.583-47.53z"
        />
      </svg>
      <strong>
        Israel Deorce
      </strong>
    </div>
  </a>
  <div
    class="c3"
  >
    <div
      class="c4"
      orientation="horizontal"
    >
      <a
        href="#/#about"
      >
        button.about
      </a>
      <a
        href="#/#skills"
      >
        button.skills
      </a>
      <a
        href="#/#experience"
      >
        button.experience
      </a>
      <a
        href="#/#contact"
      >
        button.contact
      </a>
    </div>
    <div
      class="react-toggle toggle"
    >
      <div
        class="react-toggle-track"
      >
        <div
          class="react-toggle-track-check"
        >
          <svg
            fill="currentColor"
            height="1em"
            stroke="currentColor"
            stroke-width="0"
            viewBox="0 0 512 512"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z"
            />
          </svg>
        </div>
        <div
          class="react-toggle-track-x"
        >
          <svg
            fill="currentColor"
            height="1em"
            stroke="currentColor"
            stroke-width="0"
            viewBox="0 0 512 512"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z"
            />
          </svg>
        </div>
      </div>
      <div
        class="react-toggle-thumb"
      />
      <input
        class="react-toggle-screenreader-only"
        type="checkbox"
      />
    </div>
    <div
      class="c5"
    >
      <div
        class="c6"
      >
        <svg
          fill="currentColor"
          height="1em"
          stroke="currentColor"
          stroke-width="0"
          viewBox="0 0 24 24"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M0 0h24v24H0V0z"
            fill="none"
          />
          <path
            d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
          />
        </svg>
      </div>
    </div>
  </div>
</nav>
`;

exports[`<NavBar/> Snapshot renders without crashing using shallow 1`] = `
<styled.nav>
  <styled.span
    onClick={[Function]}
  >
    <MdMenu
      size="32"
    />
  </styled.span>
  <TitledLogo />
  <styled.div>
    <PortfolioLinks />
    <ThemeToggle />
    <LanguageSelector />
  </styled.div>
</styled.nav>
`;
